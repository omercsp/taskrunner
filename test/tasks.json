{
	"version": {
		"major": 4,
		"minor": 1
	},
	"include": ["{{taskRoot}}/base_tasks_b.json"],
	"variables": {
		"aux_dir": "{{taskRoot}}/aux",
		"var0": "var0",
		"var1": "var1",
		"var2": "var2",
		"var0_1_2": "{{var0}} {{var1}} {{var2}}",
		"base_var2": "from main tasks file",
		"task_cmd": "../task",
		"task_info_cmd": "{{task_cmd}} info",
		"task_dump_cmd": "{{task_cmd}} dump",
		"optDir": "/opt"
	},
	"tasks": {
		"001_simple": {
			"short_desc": "Simple echo",
			"commands": [ "echo \"XXX\"" ]
		},
		"001b_simple": {
			"base": "001_simple",
			"short_desc": "Simple echo (based on 001_simple)"
		},
		"002_simple_env": {
			"short_desc": "Simple echo with environment variable",
			"env": {"V0": "42"},
			"commands": ["printenv V0"]
		},
		"002b_simple_env": {
			"base": "002_simple_env",
			"short_desc": "Simple echo with environment variable (based on 002_simple_env)",
			"env": {"V0": "43"}
		},
		"003_stop_on_error": {
			"short_desc": "Validate stop on error behavior",
			"commands": [
				"true",
				"echo message1",
				"false",
				"echo message2"
			],
			"meta": {
				"allowed_rc": [1]
			}
		},
		"004_continue_on_error": {
			"base": "003_stop_on_error",
			"short_desc": "Validate continue on error behavior",
			"stop_on_error": false,
			"meta": {
				"allowed_rc": [1]
			}
		},
		"005_bash_multi_cmds_no_fail": {
			"short_desc": "Validate mulit bash commands not allowed to fail",
			"shell": true,
			"commands":  ["true && echo message1 && false && echo message2"],
			"meta": {
				"allowed_rc": [1]
			}
		},
		"006_bash_multi_cmds_allow_fail": {
			"short_desc": "Validate mulit bash commands allowed to fail",
			"shell": true,
			"commands":  ["true; echo message1; false; echo message2"]
		},
		"010_list_tasks": {
			"short_desc": "Validate working directory as /",
			"commands": [
				"{{task_cmd}} --conf {{aux_dir}}/tasks-for-list.json list",
				"{{task_cmd}} --conf {{aux_dir}}/tasks-for-list.json list -a"
			]
		},
		"020_workdir_root": {
			"short_desc": "Validate working directory as /",
			"cwd": "/",
			"commands":  ["pwd"]
		},
		"021_workdir_opt": {
			"short_desc": "Validate working directory as /opt",
			"cwd": "/opt",
			"commands":  ["pwd"]
		},
		"022_workdir_taskroot": {
			"short_desc": "Validate working directory as task root (autodef)",
			"cwd": "{{taskRoot}}",
			"env": {
				"EXPECTED_PWD": "{{taskRoot}}"
			},
			"commands": ["{{aux_dir}}/check_cwd.sh"]
		},
		"023_def_expansion": {
			"short_desc": "Validate variables expansion",
			"env": {
				"MY_ENV": "{{var2}}"
			},
			"commands": [
				"echo {{var0}} {{var0}}",
				"echo __{{var1}}__",
				"echo __{{var0_1_2}}__"
			]
		},
		"024_def_expansion_env": {
			"short_desc": "Validate variables expansion for environment variables",
			"env": {
				"MY_ENV0": "{{var0}}",
				"MY_ENV1": "{{var1}}",
				"MY_ENV2": "{{var2}}"
			},
			"shell": true,
			"commands": [
				"echo __$MY_ENV0 XX $MY_ENV1 __${MY_ENV2}"
			]
		},
		"025_env_whitespace": {
			"short_desc": "Check weird environment configrations",
			"env": {
				"ENV0": "   value0",
				"ENV1   ": "value1",
				"  ENV2": "\tvalue2",
				"ENV3": "\"value3\"",
				"ENV4": "'value4'",
				"ENV5": "'\\\\value5\\t x'"
			},
			"commands": [
				"printenv ENV0",
				"printenv 'ENV1   '",
				"printenv '  ENV2'",
				"printenv ENV3",
				"printenv ENV4",
				"printenv ENV5"
			]
		},
		"030_args_handling": {
			"short_desc": "Check arguments handling",
			"commands": [
				"echo {{cliArgs}}",
				"echo \"no args\"",
				"echo {{cliArgs}}"
			],
			"meta" : {
				"args": "-- If I had wings..."
			}
		},
		"040_config_file_include_defs": {
			"short_desc": "Check variables from included files",
			"commands": [
				"echo {{base_var0}}",
				"echo {{base_var1}}",
				"echo {{base_var2}}"
			]
		},
		"041_included": {
			"short_desc": "Check overridden task, 1 deep",
			"commands": [ "echo main config file" ]
		},
		"042_included": {
			"short_desc": "Check overridden task, 2 deep",
			"commands": [ "echo main config file" ]
		},
		"base_container_test": {
			"short_desc": "Basic container support",
			"commands": [
				"pwd; echo $CENV0; cat /etc/os-release | grep PRETTY_NAME; cat /aux/volume_file.txt" ],
			"c_cwd": "/opt",
			"c_shell": true,
			"c_env": {
				"CENV0": "value0"
			},
			"c_volumes": [
				"{{cwd}}/aux:/aux"
			],
			"abstract": true
		},
		"050_container_ubuntu": {
			"base": "base_container_test",
			"short_desc": "Basic container support o/Ubuntu 20.04",
			"c_image": "docker.io/library/ubuntu:20.04"
		},
		"051_container_rocky": {
			"base": "base_container_test",
			"short_desc": "Basic container support o/Ubuntu 20.04",
			"c_image": "docker.io/rockylinux/rockylinux:8.5"
		},
		"info_task_base": {
			"abstract": true,
			"c_image": "a-wonderfull-image",
			"c_remove": false,
			"c_exec": true,
			"c_interactive": true,
			"c_volumes": ["/to-be-mapped-to-opt:{{optDir}}"],
			"c_shell": true,
			"c_shell_path": "/usr/bin/acme-shell"
		},
		"info_task": {
			"short_desc": "Dummy task for info/dump validations",
			"description": "'task' running 'task'? blesphamy!",
			"base": "info_task_base",
			"env": {
				"{{var0}}": "{{var1}}",
				"{{var1}}": "{{var0}}"
			},
			"hidden": true,
			"abstract": true,
			"cwd": "{{optDir}}",
			"commands": [
				"a command",
				"another command",
				"yet another command"
			]
		},
		"060_info": {
			"short_desc": "Validate task info",
				"commands": [
					"{{task_info_cmd}} info_task",
					"{{task_info_cmd}} -x info_task"
				]
		},
		"061_dump": {
			"short_desc": "Validate task dump",
				"commands": [
					"{{task_dump_cmd}} info_task",
					"{{task_dump_cmd}} -i info_task"
				]
		}
	},
	"use_default_include": false,
	"default_container_tool": "/usr/bin/podman"
}
